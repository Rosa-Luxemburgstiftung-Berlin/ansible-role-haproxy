---
# global
haproxy_log:
  - "/dev/log  local0"
  - "/dev/log  local1 notice"

haproxy_socket: /var/lib/haproxy/stats
haproxy_socket_level: admin  # use one of admin, operator or user
haproxy_socket_params: ''
haproxy_chroot: /var/lib/haproxy
haproxy_user: haproxy
haproxy_group: haproxy

# Extra global vars (see README for example usage).
haproxy_global_vars: []

# issue a warning if old vars are set
deprecate_old_haproxy_vars: false
# if deprecate_old_haproxy_vars is enabled
# just warn if old vars are set, otherwise fail
warn_on_old_haproxy_vars: true

# set this to true in order to completely ignore the old settings
ignore_old_haproxy_vars: false

# Frontend settings. - Deprecated! Use haproxy_frontend service list
haproxy_frontend_name: 'hafrontend'
haproxy_frontend_bind_address: '*'
haproxy_frontend_port: 80
haproxy_frontend_mode: 'http'
# extra frontend options
haproxy_frontend_options: []
# example:
# haproxy_frontend_options:
#   - description front
#   - option tcplog

# define defaults values for all haproxy_frontend services
haproxy_frontend_defaults:
  bind_address: '*'
  mode: 'http'

# list of frontend services
# each service must have name, bind_address and port defined,
# all other settings are optional and can contain strings or lists of strings
haproxy_frontends: []
# example:
# haproxy_frontend:
#   - name: httplb
#     port: 80
#     mode: http
#     bind_address: '*'
#   - name: httpslb
#     port: 443
#     # bind_args: additional args to be appended to the bind line after {{ bind_address }}:{{ port }}
#     # see: https://www.haproxy.com/blog/haproxy-ssl-termination/
#     bind_args: "ssl crt {{ ansible_fqdn }}.pem"
#     default_backend: habackend
#     description: front of front
#     option: # list of options
#       - forwardfor
#       - tcplog
#       - ...
#     ...

# Backend settings. Deprecated! Use haproxy_backend service list
haproxy_backend_name: 'habackend'
haproxy_backend_mode: 'http'
haproxy_backend_balance_method: 'roundrobin'
haproxy_backend_httpchk: 'HEAD / HTTP/1.1\r\nHost:localhost'
# extra backend options
haproxy_backend_options:
  - cookie SERVERID insert indirect
  - option forwardfor

# List of backend servers. Deprecated! Use servers section in haproxy_backend service list
haproxy_backend_servers: []
# - name: app1
#   address: 192.168.0.1:80
# - name: app2
#   address: 192.168.0.2:80
#   params: maxconn 32 check

# define defaults values for all haproxy_backend services
haproxy_backend_defaults:
  mode: http
  balance: 'roundrobin'

# list of backend services
haproxy_backends: []
# example
# haproxy_backends:
#   - name: http_backend
#     mode: http
#     balance: 'roundrobin'
#     cookie: SERVERID insert indirect
#     option:
#       - forwardfor
#       - httpchk 'HEAD / HTTP/1.1\r\nHost:localhost'
#     servers:
#       - name: app1
#         address: 192.168.0.1:80
#       - name: app2
#         address: 192.168.0.2:80
#         params: maxconn 32 check

# default
haproxy_defaults:
  - log global
  - mode http
  - option httplog
  - option dontlognull

# Default haproxy timeouts
haproxy_connect_timeout: 5000
haproxy_client_timeout: 50000
haproxy_server_timeout: 50000

# validate cfg in silent mode?
haproxy_validate_silent: true
