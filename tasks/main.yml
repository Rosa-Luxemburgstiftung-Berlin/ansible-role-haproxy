---
- name: Ensure HAProxy is installed.
  package: name=haproxy state=present

- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'

- name: Get HAProxy version.
  command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  check_mode: false

- name: Set HAProxy version.
  set_fact:
    haproxy_version: '{{ haproxy_version_result.stdout_lines[0] | regex_replace("^HA-?Proxy version ([0-9]\.[0-9]).*$", "\1") }}'

- name: Debug HAProxy version.
  debug:
    var: haproxy_version

- name: check deprecated vars
  fail:
    msg: "detected deprecated var {{ item }}"
  ignore_errors: "{{ warn_on_old_haproxy_vars }}"
  when:
    - deprecate_old_haproxy_vars
    - item in hostvars[inventory_hostname]
  with_items:
    - haproxy_frontend_name
    - haproxy_frontend_bind_address
    - haproxy_frontend_port
    - haproxy_frontend_mode
    - haproxy_frontend_options
    - haproxy_backend_name
    - haproxy_backend_mode
    - haproxy_backend_balance_method
    - haproxy_backend_httpchk
    - haproxy_backend_options
    - haproxy_backend_servers

- name: Copy HAProxy configuration in place.
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
    validate: haproxy -f %s -c{% if haproxy_validate_silent | bool %} -q{% endif %}
  notify: restart haproxy

- name: Ensure HAProxy is started and enabled on boot.
  service: name=haproxy state=started enabled=yes
