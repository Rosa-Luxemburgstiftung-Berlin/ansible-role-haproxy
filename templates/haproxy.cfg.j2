global
{% for logline in haproxy_log %}
  log {{ logline }}
{% endfor %}
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level {{ haproxy_socket_level }} {{ haproxy_socket_params }}
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
{% for k, v in haproxy_defaults.items() | list %}
{% if v is string %}
  {{ k }} {{ v }}
{% elif v is iterable %}
{% for vl in v %}
  {{ k }} {{ vl }}
{% endfor %}
{% endif %}{# end if v is string #}
{% endfor %}{# end for k, v in haproxy_defaults.items() #}
{% if haproxy_version is version('1.4', '<=') %}
  contimeout {{ haproxy_connect_timeout }}
  clitimeout {{ haproxy_client_timeout }}
  srvtimeout {{ haproxy_server_timeout }}
{% else %}
  timeout connect {{ haproxy_connect_timeout }}
  timeout client {{ haproxy_client_timeout }}
  timeout server {{ haproxy_server_timeout }}
{% endif %}
{% if ansible_os_family == 'Debian' and haproxy_defaults.mode|default('') == 'http' %}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
{% endif %}

frontend {{ haproxy_frontend_name }}
  bind {{ haproxy_frontend_bind_address }}:{{ haproxy_frontend_port }}
  mode {{ haproxy_frontend_mode }}
  default_backend {{ haproxy_backend_name }}
{% for k, v in haproxy_frontend_options.items() | list %}
{% if v is string %}
  {{ k }} {{ v }}
{% elif v is iterable %}
{% for vl in v %}
  {{ k }} {{ vl }}
{% endfor %}
{% endif %}{# end if v is string #}
{% endfor %}{# end for k, v in haproxy_frontend_options.items() #}

backend {{ haproxy_backend_name }}
  mode {{ haproxy_backend_mode }}
  balance {{ haproxy_backend_balance_method }}
{% for k, v in haproxy_backend_options.items() | list %}
{% if v is string %}
  {{ k }} {{ v }}
{% elif v is iterable %}
{% for vl in v %}
  {{ k }} {{ vl }}
{% endfor %}
{% endif %}{# end if v is string #}
{% endfor %}{# end for k, v in haproxy_backend_options.items() #}
{% if haproxy_backend_httpchk != '' %}
  option httpchk {{ haproxy_backend_httpchk }}
{% endif %}
{% for backend in haproxy_backend_servers %}
  server {{ backend.name }} {{ backend.address }} cookie {{ backend.name }} check
{% endfor %}
